(()=>{"use strict";class t{constructor(t,e,s,i=0,h=0){this.y=e,this.x=t,this.img=new Image,this.img.src=s,this.shiftX=i,this.shiftY=h}get width(){return this.img.width}get height(){return this.img.height}move(){this.x=this.x+this.shiftX,this.y=this.y+this.shiftY}draw(t){t.drawImage(this.img,this.x,this.y)}stopMoving(){this.shiftX=0,this.shiftY=0}}class e extends t{constructor(t,e,s){super(t,e,"./images/balle24.png",4,0),this.theGame=s}move(){const t=this.theGame.paddleLeft,e=this.theGame.paddleRight;this.collidesWithWall()?(this.shiftX=this.addBallSpeedX(),this.shiftY=-this.shiftY):this.shiftX<0&&this.collidesWithPaddleLeft()?(this.shiftX=Math.abs(this.addBallSpeedX()),this.shiftY=this.getAngle(t)):this.shiftX>0&&this.collidesWithPaddleRight()?(this.shiftX=-Math.abs(this.addBallSpeedX()),this.shiftY=this.getAngle(e)):this.collidesWithLeftBorder()?0!=this.shiftX&&(e.addPoint(),this.gameOver()):this.collidesWithRightBorder()&&0!=this.shiftX&&(t.addPoint(),this.gameOver()),super.move()}gameOver(){this.stopMoving(),this.theGame.displayScores(),this.theGame.status="Rematch",document.getElementById("playButton").value=this.theGame.status,this.theGame.socket.emit("req-over")}getAngle(t){const e=Math.floor((this.y+(this.y+this.height))/2),s=Math.floor((t.y+(t.y+t.height))/2),i=s/8,h=e-s;let a=0;return h<0?a=Math.floor(h/i):h>0&&(a=Math.floor(h/i)+1),a}addBallSpeedX(){const t=this.shiftX<0?-Math.abs(this.shiftX)-1:Math.abs(this.shiftX)+1;return this.updateSpeedDisplay(),t}updateSpeedDisplay(){document.getElementById("gameInfo").innerText=`Speed = ${Math.abs(this.shiftX)}`}collidesWithWall(){return this.y<=0||this.y+this.height>=this.theGame.canvas.height}collidesWithPaddleLeft(){const t=this.theGame.paddleLeft;return this.x>=t.x&&this.x<=t.x+t.width&&this.y>=t.y-this.height&&this.y<=t.y+t.height}collidesWithPaddleRight(){const t=this.theGame.paddleRight;return this.x+this.width>=t.x&&this.x+this.width<=t.x+t.width&&this.y>=t.y-this.height&&this.y<=t.y+t.height}collidesWithLeftBorder(){return this.x<=0}collidesWithRightBorder(){return this.x+this.width>=this.theGame.canvas.width}}class s extends t{score;constructor(t,e,s,i){super(t,e,s,0,50),this.theGame=i,this.score=0}moveUp(){this.y<=0?this.shiftY=-this.shiftY:(this.shiftY>0&&(this.shiftY=-this.shiftY),super.move())}moveDown(){this.y+this.height>=this.theGame.canvas.height?this.shiftY=-this.shiftY:(this.shiftY<0&&(this.shiftY=-this.shiftY),super.move())}addPoint(){this.score++}resetScore(){this.score=0}}class i{status;socket;constructor(t){this.raf=null,this.canvas=t,this.ball=new e(this.canvas.width/2,this.canvas.height/2,this),this.paddleLeft=new s(10,this.canvas.height/2,"./images/paddle_left.png",this),this.paddleRight=new s(this.canvas.width-37,this.canvas.height/2,"./images/paddle_right.png",this),this.status="Wait",this.socket=io(),this.socket.on("newConnection",(t=>{console.log(`${t} joined the lobby !`)})),this.socket.on("player1-ready",(()=>{this.status="Waiting-for-player2",document.getElementById("player1").style.fontSize="50px",document.getElementById("playButton").value="Waiting for player2 ...",document.getElementById("gameInfo").innerText="You are player1 !"})),this.socket.on("player2-ready",(()=>{document.getElementById("player2").style.fontSize="50px",document.getElementById("playButton").style.display="none",document.getElementById("gameInfo").innerText="You are player2 !"})),this.socket.on("both-ready",(()=>{this.status="Stop",document.getElementById("playButton").value="Start"})),this.socket.on("initPaddles",(()=>{this.initPaddle()})),this.socket.on("hide-playButton",(()=>{document.getElementById("playButton").style.display="none"})),this.socket.on("0/2 players",(()=>{this.status="Wait",this.resetScores(),document.getElementById("player1").style.fontSize=null,document.getElementById("player2").style.fontSize=null,document.getElementById("playButton").value="Connect",document.getElementById("playButton").style.display=null,document.getElementById("gameInfo").innerText="0/2 players"})),this.socket.on("1/2 players",(()=>{document.getElementById("gameInfo").innerText="1/2 players"})),this.socket.on("2/2 players",(()=>{document.getElementById("playButton").value="Game Full",document.getElementById("gameInfo").innerText="The Game is about to start"})),this.socket.on("opponent-disconnected",(()=>{this.stop(),this.status="Cursed",document.querySelector("body").insertAdjacentHTML("afterbegin",'<div id="boxGameCursed"></div>'),alert("Your opponent disconnected from the game. Please refresh the page (f5).")})),this.socket.on("server-full",(()=>{alert("Server full, can't connect to the game !")})),this.socket.on("paddleLeft-Up",(()=>{this.paddleLeft.moveUp(),this.moveAndDraw()})),this.socket.on("paddleRight-Up",(()=>{this.paddleRight.moveUp(),this.moveAndDraw()})),this.socket.on("paddleLeft-Down",(()=>{this.paddleLeft.moveDown(),this.moveAndDraw()})),this.socket.on("paddleRight-Down",(()=>{this.paddleRight.moveDown(),this.moveAndDraw()})),this.socket.on("start",(()=>{this.start()})),this.socket.on("stop",(()=>{this.stop()})),this.socket.on("rematch",(()=>{this.rematch()})),this.socket.on("gameInProgress",(()=>{document.getElementById("gameInfo").innerText="The Game is in Progress"})),this.socket.on("gamePaused",(()=>{document.getElementById("gameInfo").innerText="The Game is Paused"})),this.socket.on("gameOver",(()=>{document.getElementById("gameInfo").innerText="The Game is Over"}))}start(){this.status="Start",document.getElementById("playButton").value="Stop",document.getElementById("gameInfo").innerText=`Speed = ${Math.abs(this.ball.shiftX)}`,this.animate()}stop(){this.status="Stop",document.getElementById("playButton").value="Continue",window.cancelAnimationFrame(this.raf)}rematch(){this.status="Start",document.getElementById("playButton").value="Stop",this.raf=null,this.ball=new e(this.canvas.width/2,this.canvas.height/2,this),document.getElementById("gameInfo").innerText=`Speed = ${Math.abs(this.ball.shiftX)}`}displayScores(){document.querySelector("#player1Score").innerText=this.paddleLeft.score,document.querySelector("#player2Score").innerText=this.paddleRight.score}resetScores(){this.paddleLeft.resetScore(),this.paddleRight.resetScore()}initPaddle(){console.log("paddleKeysInited"),document.addEventListener("keydown",(t=>{"Start"!=this.status&&"Rematch"!=this.status||(console.log("Key pressed : ",t.key),"ArrowUp"==t.key?this.socket.emit("arrowUp"):"ArrowDown"==t.key&&this.socket.emit("arrowDown"))}))}animate(){this.moveAndDraw(),this.raf=window.requestAnimationFrame(this.animate.bind(this))}moveAndDraw(){const t=this.canvas.getContext("2d");t.clearRect(0,0,this.canvas.width,this.canvas.height),this.ball.move(),this.ball.draw(t),this.paddleLeft.draw(t),this.paddleRight.draw(t)}}const h=document.getElementById("field");window.addEventListener("load",(()=>{const t=document.getElementById("playButton"),e=new i(h);t.addEventListener("click",(t=>{t.preventDefault(),"Wait"==e.status?e.socket.emit("ready"):"Waiting-for-player2"==e.status?e.socket.emit("not-ready"):"Stop"==e.status?e.socket.emit("req-start"):"Start"==e.status?e.socket.emit("req-stop"):"Rematch"==e.status&&e.socket.emit("req-rematch")}))}))})();